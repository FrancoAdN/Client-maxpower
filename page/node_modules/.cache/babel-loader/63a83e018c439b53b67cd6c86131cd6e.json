{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\User\\\\Desktop\\\\dd\\\\Client-maxpower\\\\page\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:\\\\Users\\\\User\\\\Desktop\\\\dd\\\\Client-maxpower\\\\page\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{createContext,useState,useRef,useEffect}from'react';import io from'socket.io-client';export var SockContext=createContext();export default function Store(props){var socket=useRef();var _useState=useState([{from:0,msg:'Bienvenido al chat!'}]),_useState2=_slicedToArray(_useState,2),messages=_useState2[0],setMessages=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),connected=_useState4[0],setConnected=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),server=_useState6[0],setServer=_useState6[1];var _useState7=useState({}),_useState8=_slicedToArray(_useState7,2),user=_useState8[0],setUser=_useState8[1];var userRef=useRef();var messagesRef=useRef();useEffect(function(){userRef.current=user;},[user]);useEffect(function(){messagesRef.current=messages;},[messages]);useEffect(function(){socket.current=io(\"https://api.maxpower-ar.com\");socket.current.on('server_message',function(message){setMessages(function(messages){return[].concat(_toConsumableArray(messages),[message]);});console.log(message);});socket.current.on('server_disconnected',function(){return setServer(false);});socket.current.on('existing_conv',function(){var client_data={name:userRef.current.name,email:userRef.current.email,tel:userRef.current.tel,emp:userRef.current.emp,messages:messagesRef.current};socket.current.emit('client_existing_conv',client_data);});return function(){socket.current.disconnect();};},[]);var sendMessage=function sendMessage(data){setMessages(function(messages){return[].concat(_toConsumableArray(messages),[data]);});socket.current.emit(\"client_message\",data);};var connectClient=function connectClient(client){setUser(client);socket.current.emit('client_conn',client);setConnected(true);setServer(true);};return/*#__PURE__*/React.createElement(SockContext.Provider,{value:{messages:messages,sendMessage:sendMessage,connectClient:connectClient,connected:connected,server:server}},props.children);}","map":{"version":3,"sources":["C:/Users/User/Desktop/dd/Client-maxpower/page/src/_useChat.js"],"names":["React","createContext","useState","useRef","useEffect","io","SockContext","Store","props","socket","from","msg","messages","setMessages","connected","setConnected","server","setServer","user","setUser","userRef","messagesRef","current","on","message","console","log","client_data","name","email","tel","emp","emit","disconnect","sendMessage","data","connectClient","client","children"],"mappings":"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","sourcesContent":["import React, { createContext, useState, useRef, useEffect } from 'react'\r\nimport io from 'socket.io-client'\r\n\r\nexport const SockContext = createContext()\r\n\r\n\r\n\r\nexport default function Store(props) {\r\n\r\n    const socket = useRef()\r\n    const [messages, setMessages] = useState([{ from: 0, msg: 'Bienvenido al chat!' }])\r\n    const [connected, setConnected] = useState(false)\r\n    const [server, setServer] = useState(false)\r\n    const [user, setUser] = useState({})\r\n    const userRef = useRef()\r\n    const messagesRef = useRef()\r\n\r\n    useEffect(() => {\r\n        userRef.current = user\r\n    }, [user])\r\n\r\n    useEffect(() => {\r\n        messagesRef.current = messages\r\n    }, [messages])\r\n\r\n    useEffect(() => {\r\n        socket.current = io(\"https://api.maxpower-ar.com\")\r\n\r\n        socket.current.on('server_message', (message) => {\r\n            setMessages(messages => [...messages, message])\r\n            console.log(message)\r\n        })\r\n\r\n        socket.current.on('server_disconnected', () => setServer(false))\r\n\r\n        socket.current.on('existing_conv', () => {\r\n            const client_data = { name: userRef.current.name, email: userRef.current.email, tel: userRef.current.tel, emp: userRef.current.emp, messages: messagesRef.current }\r\n            socket.current.emit('client_existing_conv', client_data)\r\n        })\r\n\r\n\r\n        return () => {\r\n            socket.current.disconnect()\r\n        }\r\n    }, [])\r\n\r\n\r\n    const sendMessage = (data) => {\r\n        setMessages(messages => [...messages, data])\r\n        socket.current.emit(\"client_message\", data)\r\n    }\r\n\r\n    const connectClient = (client) => {\r\n        setUser(client)\r\n        socket.current.emit('client_conn', client)\r\n        setConnected(true)\r\n        setServer(true)\r\n    }\r\n\r\n    return (\r\n        <SockContext.Provider value={{ messages, sendMessage, connectClient, connected, server }}>\r\n            {props.children}\r\n        </SockContext.Provider>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}