{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Client-maxpower\\\\page\\\\src\\\\components\\\\Chat\\\\Chat.js\";\n// import React, { useState, useContext, useEffect } from 'react'\n// import './Chat.css'\n// import { SockContext } from '../../_useChat'\n// export default function Chat() {\n//     const [text, setText] = useState('')\n//     return (\n//         <div>\n//             <div id='chat' style={{ width: '350px', height: '460px', borderRadius: '10px', background: '#e2130b', border: '1px solid #e2130b', display: 'block' }}>\n//                 <div className=\"w-100\" style={{ height: '30px', color: '#fff' }}>\n//                     <center><h5>Maxpower chat</h5></center>\n//                 </div>\n//                 <ChatBody con={connected} conFun={connectClient} messages={messages} server={server} />\n//                 <div className=\"w-100 d-flex justify-content-around\" style={{ height: '50px' }}>\n//                     <div className=\"in-msg d-flex justify-content-around\">\n//                         <input\n//                             type=\"text\"\n//                             value={text}\n//                             onChange={e => setText(e.target.value)}\n//                             onKeyDown={e => {\n//                                 if (e.key === \"Enter\") {\n//                                     e.preventDefault()\n//                                     sendMessage({ from: 1, msg: text })\n//                                     setText('')\n//                                 }\n//                             }}\n//                         />\n//                         <button type=\"button\"\n//                             className=\"btn mx-auto my-auto\"\n//                             style={{ borderRadius: '30px', background: '#ffffff' }}\n//                             onClick={e => {\n//                                 e.preventDefault()\n//                                 sendMessage({ from: 1, msg: text })\n//                                 setText('')\n//                             }}\n//                         >\n//                             <img src=\"https://img.icons8.com/small/16/000000/filled-sent.png\" />\n//                         </button>\n//                     </div>\n//                 </div>\n//             </div>\n//             <button className=\"rounded-circle chat-btn\" onClick={e => {\n//                 e.preventDefault()\n//                 const chat = document.getElementById('chat').style.display\n//                 if (chat == 'block')\n//                     document.getElementById('chat').style.display = 'none'\n//                 else\n//                     document.getElementById('chat').style.display = 'block'\n//             }}>\n//                 <img src=\"https://img.icons8.com/wired/40/000000/chat.png\" alt=\"...\" style={{ margin: '5px' }} />\n//             </button>\n//         </div>\n//     )\n// }\n// function ChatMessage({ msg }) {\n//     if (msg.from) {\n//         // Message from client\n//         return (<div style={{ margin: '10px' }}>\n//             <span className=\"d-inline float-right\" style={{ background: '#e2130b', padding: '10px', paddingLeft: '20px', paddingRight: '20px', borderRadius: '30px', maxWidth: '70%', color: '#fff' }}>{msg.msg}</span>\n//         </div>)\n//     }\n//     // Message from server\n//     return (<div className=\"mw-75\" style={{ margin: '15px', maxWidth: '70%' }}>\n//         <span className=\"mw-75\" style={{ background: '#e3e3e3', padding: '10px', paddingLeft: '20px', paddingRight: '20px', borderRadius: '30px' }}>\n//             {msg.msg}\n//         </span>\n//     </div >)\n// }\n// function PreConnectForm({ connect }) {\n//     const [name, setName] = useState('')\n//     const [email, setEmail] = useState('')\n//     const [emp, setEmp] = useState('')\n//     const [tel, setTel] = useState('')\n//     return (\n//         <form\n//             className=\"d-flex flex-column my-auto\"\n//             style={{\n//                 marginTop: '50px',\n//                 width: '350px',\n//                 height: '380px',\n//                 background: '#e3e3e3'\n//             }}\n//             onSubmit={\n//                 e => {\n//                     e.preventDefault()\n//                     const client = { name, email, tel, emp }\n//                     connect(client)\n//                 }\n//             }\n//         >\n//             <input type=\"text\" value={name} placeholder=\"Nombre:\" required style={{ margin: '15px' }} onChange={e => setName(e.target.value)} />\n//             <input type=\"email\" value={email} placeholder=\"Email:\" required style={{ margin: '15px' }} onChange={e => setEmail(e.target.value)} />\n//             <input type=\"text\" value={emp} placeholder=\"Empresa:\" required style={{ margin: '15px' }} onChange={e => setEmp(e.target.value)} />\n//             <input type=\"tel\" value={tel} placeholder=\"Teléfono:\" pattern=\"[0-9]{3} [0-9]{4} [0-9]{4}\" required style={{ margin: '15px' }} onChange={e => setTel(e.target.value)} />\n//             <center><button\n//                 type=\"submit\"\n//                 className=\"btn send-button\"\n//                 style={{\n//                     width: '150px',\n//                     background: '#e2130b',\n//                     color: '#ffffff',\n//                     marginTop: '15px',\n//                     marginBottom: '15px',\n//                 }}\n//             >Conectarme</button></center>\n//         </form>\n//     )\n// }\n// function ChatBody({ con, conFun, messages, server }) {\n//     if (con && server) {\n//         return (\n//             <div className=\"w-100 content d-flex flex-column overflow-auto\" style={{ height: '380px', background: '#fff' }}>\n//                 {\n//                     messages.map((msg, i) => (\n//                         <ChatMessage key={i} msg={msg} />\n//                     ))\n//                 }\n//             </div>\n//         )\n//     } else if (con && !server) {\n//         return (\n//             <div className=\"w-100 content d-flex flex-column overflow-auto\" style={{ height: '380px', background: '#fff' }}>\n//                 <h4>Lo siento, no hay nadie para contestar en este momento.</h4>\n//             </div>\n//         )\n//     }\n//     return (\n//         <PreConnectForm connect={conFun} />\n//     )\n// }\nimport React, { useState } from 'react';\nimport './style.css';\nexport default function Chat() {\n  //     const { messages, sendMessage, connectClient, connected, server } = useContext(SockContext)\n  const [messages, setMessages] = useState([{\n    from: 0,\n    msg: 'Bienvenido al chat de maxpower'\n  }, {\n    from: 0,\n    msg: 'En que podemos ayudarte, que andas buscando'\n  }, {\n    from: 1,\n    msg: 'Buen día Maxpower, ando buscando un variador ATV'\n  }, {\n    from: 1,\n    msg: 'Necesito saber el precio y si tienen stock'\n  }, {\n    from: 1,\n    msg: 'test'\n  }, {\n    from: 0,\n    msg: 'test'\n  }, {\n    from: 0,\n    msg: 'r'\n  }, {\n    from: 0,\n    msg: 'a'\n  }, {\n    from: 1,\n    msg: 'a'\n  }, {\n    from: 1,\n    msg: 'b'\n  }]);\n  const [text, setText] = useState('');\n  const [disp, setDisplay] = useState('none');\n\n  const handleKeyDown = e => {\n    if (e.key === \"Enter\") {\n      e.preventDefault(); // sendMessage({ from: 1, msg: text })\n\n      setText('');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"smith-container\",\n    style: {\n      display: disp\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"smith-chat-frame e5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"smith-chat-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"smith-chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"smith-chat-header background-brand\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"smith-chat-header-overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"smith-header-profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"smith-header-profile-avatar e2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"http://api.maxpower-ar.com/imagen/logo.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"smith-header-profile-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 41\n    }\n  }, \" MAXPOWER \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"smith-header-profile-intro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 45\n    }\n  }, \" Puedes comunicarte con nosotros a traves de nuestro chat online. Te atenderemos en instantes.\"))))), /*#__PURE__*/React.createElement(ChatBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"smith-chat-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"smith-chat-bar-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Escriba su mensaje\",\n    value: text,\n    onChange: e => setText(e.target.value),\n    onKeyDown: handleKeyDown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn send-btn\",\n    onClick: e => {\n      e.preventDefault(); // sendMessage({ from: 1, msg: text })\n\n      setText('');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 29\n    }\n  }, \"Enviar\"))))), /*#__PURE__*/React.createElement(LaunchCircle, {\n    display: disp,\n    set: setDisplay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }\n  }));\n}\n\nfunction PrintMessage({\n  msg\n}) {\n  if (msg.from) {\n    //Message from client\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"smith-conversation-part smith-conversation-part-guest\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"smith-comment-container smith-comment-container-guest\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"smith-comment e1 background-brand f-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"smith-blocks \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"smith-block smith-block-paragraph\",\n      style: {\n        color: '#fff'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 29\n      }\n    }, msg.msg))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"smith-timestamp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 21\n      }\n    })));\n  } // Message from server\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"smith-conversation-part smith-conversation-part-admin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"smith-comment-container smith-comment-container-admin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"smith-comment-container-admin-avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"smith-avatar e2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"http://api.maxpower-ar.com/imagen/logo.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"smith-comment e1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"smith-blocks\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"smith-block smith-block-paragraph\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 25\n    }\n  }, msg.msg))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"smith-timestamp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 17\n    }\n  })));\n}\n\nfunction LaunchCircle({\n  display,\n  set\n}) {\n  const handleClick = e => {\n    e.preventDefault();\n    if (display === 'block') set('none');else set('block');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"launch\",\n    className: \"smith-launcher-frame e5\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"smith-launcher\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }\n  }));\n}\n\nfunction ContactForm({\n  connect\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contact-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contact-form-heading text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 17\n    }\n  }, \" Bienvenido a nuestro chat\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 17\n    }\n  }, \" Debe completar el formulario de contacto \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 62\n    }\n  }), \" para poder continuar. \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contact-form-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Nombre\",\n    className: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"tel\",\n    placeholder: \"Telefono\",\n    className: \"phone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"Email\",\n    className: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Empresa\",\n    className: \"empresa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"send text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 17\n    }\n  }, \" Enviar datos \")));\n}\n\nfunction ChatBody({\n  con,\n  conFun,\n  messages,\n  server\n}) {\n  if (con && server) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"smith-chat-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"smith-conversation-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"smith-conversation-body-parts\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"smith-conversation-parts-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"smith-conversation-parts\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 29\n      }\n    }, messages.map((msg, i) => /*#__PURE__*/React.createElement(PrintMessage, {\n      msg: msg,\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 41\n      }\n    })))))));\n  } else if (con && !server) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 13\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(ContactForm, {\n    connect: conFun,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 9\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/Client-maxpower/page/src/components/Chat/Chat.js"],"names":["React","useState","Chat","messages","setMessages","from","msg","text","setText","disp","setDisplay","handleKeyDown","e","key","preventDefault","display","target","value","PrintMessage","color","LaunchCircle","set","handleClick","ContactForm","connect","ChatBody","con","conFun","server","map","i"],"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","sourcesContent":["// import React, { useState, useContext, useEffect } from 'react'\r\n// import './Chat.css'\r\n// import { SockContext } from '../../_useChat'\r\n\r\n// export default function Chat() {\r\n//     const [text, setText] = useState('')\r\n\r\n\r\n//     return (\r\n//         <div>\r\n//             <div id='chat' style={{ width: '350px', height: '460px', borderRadius: '10px', background: '#e2130b', border: '1px solid #e2130b', display: 'block' }}>\r\n//                 <div className=\"w-100\" style={{ height: '30px', color: '#fff' }}>\r\n//                     <center><h5>Maxpower chat</h5></center>\r\n//                 </div>\r\n//                 <ChatBody con={connected} conFun={connectClient} messages={messages} server={server} />\r\n\r\n//                 <div className=\"w-100 d-flex justify-content-around\" style={{ height: '50px' }}>\r\n//                     <div className=\"in-msg d-flex justify-content-around\">\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             value={text}\r\n//                             onChange={e => setText(e.target.value)}\r\n//                             onKeyDown={e => {\r\n//                                 if (e.key === \"Enter\") {\r\n//                                     e.preventDefault()\r\n//                                     sendMessage({ from: 1, msg: text })\r\n//                                     setText('')\r\n//                                 }\r\n//                             }}\r\n//                         />\r\n//                         <button type=\"button\"\r\n//                             className=\"btn mx-auto my-auto\"\r\n//                             style={{ borderRadius: '30px', background: '#ffffff' }}\r\n//                             onClick={e => {\r\n//                                 e.preventDefault()\r\n//                                 sendMessage({ from: 1, msg: text })\r\n//                                 setText('')\r\n//                             }}\r\n//                         >\r\n//                             <img src=\"https://img.icons8.com/small/16/000000/filled-sent.png\" />\r\n//                         </button>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//             <button className=\"rounded-circle chat-btn\" onClick={e => {\r\n//                 e.preventDefault()\r\n//                 const chat = document.getElementById('chat').style.display\r\n//                 if (chat == 'block')\r\n//                     document.getElementById('chat').style.display = 'none'\r\n//                 else\r\n//                     document.getElementById('chat').style.display = 'block'\r\n//             }}>\r\n//                 <img src=\"https://img.icons8.com/wired/40/000000/chat.png\" alt=\"...\" style={{ margin: '5px' }} />\r\n//             </button>\r\n\r\n//         </div>\r\n\r\n//     )\r\n// }\r\n\r\n// function ChatMessage({ msg }) {\r\n//     if (msg.from) {\r\n//         // Message from client\r\n//         return (<div style={{ margin: '10px' }}>\r\n//             <span className=\"d-inline float-right\" style={{ background: '#e2130b', padding: '10px', paddingLeft: '20px', paddingRight: '20px', borderRadius: '30px', maxWidth: '70%', color: '#fff' }}>{msg.msg}</span>\r\n//         </div>)\r\n//     }\r\n//     // Message from server\r\n//     return (<div className=\"mw-75\" style={{ margin: '15px', maxWidth: '70%' }}>\r\n//         <span className=\"mw-75\" style={{ background: '#e3e3e3', padding: '10px', paddingLeft: '20px', paddingRight: '20px', borderRadius: '30px' }}>\r\n//             {msg.msg}\r\n//         </span>\r\n//     </div >)\r\n\r\n// }\r\n\r\n// function PreConnectForm({ connect }) {\r\n//     const [name, setName] = useState('')\r\n//     const [email, setEmail] = useState('')\r\n//     const [emp, setEmp] = useState('')\r\n//     const [tel, setTel] = useState('')\r\n//     return (\r\n//         <form\r\n//             className=\"d-flex flex-column my-auto\"\r\n//             style={{\r\n//                 marginTop: '50px',\r\n//                 width: '350px',\r\n//                 height: '380px',\r\n//                 background: '#e3e3e3'\r\n//             }}\r\n\r\n//             onSubmit={\r\n//                 e => {\r\n//                     e.preventDefault()\r\n//                     const client = { name, email, tel, emp }\r\n//                     connect(client)\r\n//                 }\r\n//             }\r\n//         >\r\n//             <input type=\"text\" value={name} placeholder=\"Nombre:\" required style={{ margin: '15px' }} onChange={e => setName(e.target.value)} />\r\n//             <input type=\"email\" value={email} placeholder=\"Email:\" required style={{ margin: '15px' }} onChange={e => setEmail(e.target.value)} />\r\n//             <input type=\"text\" value={emp} placeholder=\"Empresa:\" required style={{ margin: '15px' }} onChange={e => setEmp(e.target.value)} />\r\n//             <input type=\"tel\" value={tel} placeholder=\"Teléfono:\" pattern=\"[0-9]{3} [0-9]{4} [0-9]{4}\" required style={{ margin: '15px' }} onChange={e => setTel(e.target.value)} />\r\n//             <center><button\r\n//                 type=\"submit\"\r\n//                 className=\"btn send-button\"\r\n//                 style={{\r\n//                     width: '150px',\r\n//                     background: '#e2130b',\r\n//                     color: '#ffffff',\r\n//                     marginTop: '15px',\r\n//                     marginBottom: '15px',\r\n//                 }}\r\n//             >Conectarme</button></center>\r\n//         </form>\r\n//     )\r\n// }\r\n\r\n// function ChatBody({ con, conFun, messages, server }) {\r\n//     if (con && server) {\r\n//         return (\r\n//             <div className=\"w-100 content d-flex flex-column overflow-auto\" style={{ height: '380px', background: '#fff' }}>\r\n//                 {\r\n//                     messages.map((msg, i) => (\r\n//                         <ChatMessage key={i} msg={msg} />\r\n//                     ))\r\n//                 }\r\n//             </div>\r\n//         )\r\n//     } else if (con && !server) {\r\n//         return (\r\n//             <div className=\"w-100 content d-flex flex-column overflow-auto\" style={{ height: '380px', background: '#fff' }}>\r\n//                 <h4>Lo siento, no hay nadie para contestar en este momento.</h4>\r\n//             </div>\r\n//         )\r\n//     }\r\n\r\n//     return (\r\n//         <PreConnectForm connect={conFun} />\r\n//     )\r\n// }\r\n\r\nimport React, { useState } from 'react'\r\nimport './style.css'\r\n\r\nexport default function Chat() {\r\n    //     const { messages, sendMessage, connectClient, connected, server } = useContext(SockContext)\r\n    const [messages, setMessages] = useState([\r\n        { from: 0, msg: 'Bienvenido al chat de maxpower' },\r\n        { from: 0, msg: 'En que podemos ayudarte, que andas buscando' },\r\n        { from: 1, msg: 'Buen día Maxpower, ando buscando un variador ATV' },\r\n        { from: 1, msg: 'Necesito saber el precio y si tienen stock' },\r\n        { from: 1, msg: 'test' },\r\n        { from: 0, msg: 'test' },\r\n        { from: 0, msg: 'r' }, { from: 0, msg: 'a' },\r\n        { from: 1, msg: 'a' },\r\n        { from: 1, msg: 'b' },\r\n    ])\r\n    const [text, setText] = useState('')\r\n    const [disp, setDisplay] = useState('none')\r\n\r\n    const handleKeyDown = (e) => {\r\n\r\n        if (e.key === \"Enter\") {\r\n            e.preventDefault()\r\n            // sendMessage({ from: 1, msg: text })\r\n            setText('')\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div id=\"smith-container\" style={{ display: disp }}>\r\n                <div className=\"smith-chat-frame e5\">\r\n                    <div id=\"smith-chat-container\">\r\n                        <div className=\"smith-chat\">\r\n                            <div className=\"smith-chat-header background-brand\">\r\n                                <div className=\"smith-chat-header-overlay\">\r\n                                    <div className=\"smith-header-profile\">\r\n                                        <div className=\"smith-header-profile-avatar e2\">\r\n                                            <img src=\"http://api.maxpower-ar.com/imagen/logo.png\" />\r\n                                        </div>\r\n                                        <div className=\"smith-header-profile-name\"> MAXPOWER </div>\r\n                                        <div className=\"smith-header-profile-intro\">\r\n                                            <span> Puedes comunicarte con nosotros a traves de nuestro chat online. Te atenderemos en instantes.</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <ChatBody />\r\n\r\n                            {/* <div className=\"smith-chat-body\">\r\n                                <div className=\"smith-conversation-container\">\r\n                                    <div className=\"smith-conversation-body-parts\">\r\n                                        <div className=\"smith-conversation-parts-wrapper\">\r\n                                            <div className=\"smith-conversation-parts\">\r\n\r\n                                                {\r\n                                                    messages.map((msg, i) => (\r\n                                                        <PrintMessage msg={msg} key={i} />\r\n                                                    ))\r\n                                                }\r\n\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                         */}\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"smith-chat-bar\">\r\n                        <div className=\"smith-chat-bar-message\">\r\n                            <input placeholder=\"Escriba su mensaje\" value={text} onChange={e => setText(e.target.value)}\r\n                                onKeyDown={handleKeyDown} />\r\n                            <button type=\"button\" className=\"btn send-btn\" onClick={e => {\r\n                                e.preventDefault()\r\n                                // sendMessage({ from: 1, msg: text })\r\n                                setText('')\r\n                            }}>Enviar</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <LaunchCircle display={disp} set={setDisplay} />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction PrintMessage({ msg }) {\r\n    if (msg.from) {\r\n        //Message from client\r\n        return (\r\n            <div className=\"smith-conversation-part smith-conversation-part-guest\">\r\n                <div className=\"smith-comment-container smith-comment-container-guest\">\r\n                    <div className=\"smith-comment e1 background-brand f-right\">\r\n                        <div className=\"smith-blocks \">\r\n                            <div className=\"smith-block smith-block-paragraph\" style={{ color: '#fff' }}>{msg.msg}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"smith-timestamp\">\r\n                        {/* <span> time </span> <!-- Time --> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n    // Message from server\r\n    return (\r\n        <div className=\"smith-conversation-part smith-conversation-part-admin\">\r\n            <div className=\"smith-comment-container smith-comment-container-admin\">\r\n                <div className=\"smith-comment-container-admin-avatar\">\r\n                    <div className=\"smith-avatar e2\">\r\n                        <img src=\"http://api.maxpower-ar.com/imagen/logo.png\" />\r\n                    </div>\r\n                </div>\r\n                {/* <!-- Message Admin --> */}\r\n                <div className=\"smith-comment e1\">\r\n                    <div className=\"smith-blocks\">\r\n                        <div className=\"smith-block smith-block-paragraph\">{msg.msg}</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"smith-timestamp\">\r\n                    {/* <span> time </span>  */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nfunction LaunchCircle({ display, set }) {\r\n    const handleClick = (e) => {\r\n        e.preventDefault()\r\n        if (display === 'block') set('none')\r\n        else set('block')\r\n    }\r\n    return (\r\n        <div id=\"launch\" className=\"smith-launcher-frame e5\" onClick={handleClick}>\r\n            <div className=\"smith-launcher\">\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction ContactForm({ connect }) {\r\n    return (\r\n        <div className=\"contact-form\">\r\n            <div className=\"contact-form-heading text-center\">\r\n                <h2> Bienvenido a nuestro chat</h2>\r\n                <p> Debe completar el formulario de contacto <br /> para poder continuar. </p>\r\n            </div>\r\n            <div className=\"contact-form-container\">\r\n                <input type=\"text\" placeholder=\"Nombre\" className=\"name\" />\r\n                <input type=\"tel\" placeholder=\"Telefono\" className=\"phone\" />\r\n                <input type=\"email\" placeholder=\"Email\" className=\"email\" />\r\n                <input type=\"text\" placeholder=\"Empresa\" className=\"empresa\" />\r\n                <button className=\"send text-center\"> Enviar datos </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction ChatBody({ con, conFun, messages, server }) {\r\n    if (con && server) {\r\n        return (\r\n            <div className=\"smith-chat-body\">\r\n                <div className=\"smith-conversation-container\">\r\n                    <div className=\"smith-conversation-body-parts\">\r\n                        <div className=\"smith-conversation-parts-wrapper\">\r\n                            <div className=\"smith-conversation-parts\">\r\n\r\n                                {\r\n                                    messages.map((msg, i) => (\r\n                                        <PrintMessage msg={msg} key={i} />\r\n                                    ))\r\n                                }\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    } else if (con && !server) {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <ContactForm connect={conFun} />\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}